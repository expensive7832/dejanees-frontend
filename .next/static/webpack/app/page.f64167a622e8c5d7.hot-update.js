"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/api.tsx":
/*!*********************!*\
  !*** ./src/api.tsx ***!
  \*********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   api: () => (/* binding */ api),\n/* harmony export */   apiwithtoken: () => (/* binding */ apiwithtoken)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _redux_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../redux/store */ \"(app-pages-browser)/./redux/store.tsx\");\n\n\nlet apiwithtoken = axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n    baseURL: \"https://backend.dejaneesconcepts.com.ng/\"\n});\nlet api = axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n    baseURL: \"https://backend.dejaneesconcepts.com.ng/\"\n});\napiwithtoken.interceptors.request.use((config)=>{\n    var _store_getState_user_token, _store_getState_user, _store_getState;\n    const token = _redux_store__WEBPACK_IMPORTED_MODULE_0__[\"default\"] === null || _redux_store__WEBPACK_IMPORTED_MODULE_0__[\"default\"] === void 0 ? void 0 : (_store_getState = _redux_store__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getState()) === null || _store_getState === void 0 ? void 0 : (_store_getState_user = _store_getState.user) === null || _store_getState_user === void 0 ? void 0 : (_store_getState_user_token = _store_getState_user.token) === null || _store_getState_user_token === void 0 ? void 0 : _store_getState_user_token.access;\n    if (token) {\n        config.headers.Authorization = \"Bearer \".concat(token);\n    }\n    return config;\n});\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcGkudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBeUQ7QUFDdkI7QUFHbEMsSUFBSUUsZUFBZUYsNkNBQUtBLENBQUNHLE1BQU0sQ0FBQztJQUM1QkMsU0FBUztBQUViO0FBQ0EsSUFBSUMsTUFBTUwsNkNBQUtBLENBQUNHLE1BQU0sQ0FBQztJQUNuQkMsU0FBUztBQUViO0FBRUFGLGFBQWFJLFlBQVksQ0FBQ0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsQ0FBQ0M7UUFDckJSLDRCQUFBQSxzQkFBQUE7SUFBZCxNQUFNUyxRQUFRVCxvREFBS0EsYUFBTEEsb0RBQUtBLHdCQUFMQSxrQkFBQUEsb0RBQUtBLENBQUVVLFFBQVEsZ0JBQWZWLHVDQUFBQSx1QkFBQUEsZ0JBQW1CVyxJQUFJLGNBQXZCWCw0Q0FBQUEsNkJBQUFBLHFCQUF5QlMsS0FBSyxjQUE5QlQsaURBQUFBLDJCQUFnQ1ksTUFBTTtJQUNwRCxJQUFJSCxPQUFPO1FBQ1BELE9BQU9LLE9BQU8sQ0FBQ0MsYUFBYSxHQUFHLFVBQWdCLE9BQU5MO0lBQzdDO0lBQ0EsT0FBT0Q7QUFDWDtBQVEyQiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9hcGkudHN4P2JkYzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF4aW9zLCB7IEludGVybmFsQXhpb3NSZXF1ZXN0Q29uZmlnIH0gZnJvbSBcImF4aW9zXCJcclxuaW1wb3J0IHN0b3JlIGZyb20gXCIuLi9yZWR1eC9zdG9yZVwiXHJcblxyXG5cclxubGV0IGFwaXdpdGh0b2tlbiA9IGF4aW9zLmNyZWF0ZSh7XHJcbiAgICBiYXNlVVJMOiBcImh0dHBzOi8vYmFja2VuZC5kZWphbmVlc2NvbmNlcHRzLmNvbS5uZy9cIixcclxuICAgIFxyXG59KVxyXG5sZXQgYXBpID0gYXhpb3MuY3JlYXRlKHtcclxuICAgIGJhc2VVUkw6IFwiaHR0cHM6Ly9iYWNrZW5kLmRlamFuZWVzY29uY2VwdHMuY29tLm5nL1wiLFxyXG4gICAgXHJcbn0pXHJcblxyXG5hcGl3aXRodG9rZW4uaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKChjb25maWc6IEludGVybmFsQXhpb3NSZXF1ZXN0Q29uZmlnKSA9PiB7XHJcbiAgICBjb25zdCB0b2tlbiA9IHN0b3JlPy5nZXRTdGF0ZSgpPy51c2VyPy50b2tlbj8uYWNjZXNzO1xyXG4gICAgaWYgKHRva2VuKSB7XHJcbiAgICAgICAgY29uZmlnLmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9IGBCZWFyZXIgJHt0b2tlbn1gO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGNvbmZpZztcclxufSlcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbmV4cG9ydCAge2FwaXdpdGh0b2tlbiwgYXBpfSJdLCJuYW1lcyI6WyJheGlvcyIsInN0b3JlIiwiYXBpd2l0aHRva2VuIiwiY3JlYXRlIiwiYmFzZVVSTCIsImFwaSIsImludGVyY2VwdG9ycyIsInJlcXVlc3QiLCJ1c2UiLCJjb25maWciLCJ0b2tlbiIsImdldFN0YXRlIiwidXNlciIsImFjY2VzcyIsImhlYWRlcnMiLCJBdXRob3JpemF0aW9uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/api.tsx\n"));

/***/ })

});